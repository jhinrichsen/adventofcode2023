image: golang:1.22

# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
stages:
    - test
sast:
    stage: test
include:
    - template: Security/SAST.gitlab-ci.yml

test-job:
    stage: test
    script:
        - make --version
        - make -r coverage.xml junit.xml quality.json 
    coverage: '/coverage: \d+\.\d+%/'
    artifacts:
        reports:
            codequality: quality.json
            coverage_report:
                coverage_format: cobertura
                path: coverage.xml

            junit: junit.xml
        paths:
          - coverage.xml
          - junit.xml
          - quality.json

# include coverage from test.log so it does not get lost
vuln-report:
    stage: test
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && $CI_SCHED_FREQ == "weekly"'
    script:
        - make -r test.log govulncheck.sarif
    coverage: '/coverage: \d+\.\d+%/'
    artifacts:
        reports:
            sast: govulncheck.sarif
        paths:
            - govulncheck.sarif
